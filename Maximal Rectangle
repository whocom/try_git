Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area.

public int maximalRectangle(char[][] matrix) {
        if(matrix == null || matrix.length == 0){
            return 0;
        }
        int width = matrix.length, height = matrix[0].length;
        int[][] sumX = new int[width][height];
        for(int i = 0; i < width; i++){
            for(int j = 0; j < height; j++){
                if(j == 0){
                    sumX[i][j] = matrix[i][j] == '1'? 1: 0;
                }
                else{
                    sumX[i][j] = (matrix[i][j] == '1')? (sumX[i][j - 1] + 1): 0;
                }
            }
        }
        
        int max = 0;
        for(int i = 0; i < width; i++){
            for(int j = 0; j < height; j++){
                if(sumX[i][j] != 0){
                    int temp = 0, w = sumX[i][j];
                    for(int k = i; k >= 0 && sumX[k][j] != 0; k--){
                        if(sumX[k][j] < w){
                            w = sumX[k][j];
                        }
                        temp = (i - k + 1) * w;
                        if(temp > max){
                            max = temp;
                        }
                    }
                }
            }
        }
        return max;
    }
