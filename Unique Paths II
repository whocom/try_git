Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,

There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

  public int uniquePathsWithObstacles(int[][] obstacleGrid) {
    if(obstacleGrid == null || obstacleGrid.length == 0){
      return 0;
    }
    int m = obstacleGrid.length, n = obstacleGrid[0].length;
    if(obstacleGrid[0][0] == 1){
      return 0;
    }
    int[][] num = new int[m][n];
    num[0][0] = 1;
    for(int i = 0; i < m; i++){
      for(int j = 0; j < n; j++){
        if(obstacleGrid[i][j] == 1){
          num[i][j] = 0;
        }
        else if(i == 0 && j != 0){
          num[i][j] = num[i][j - 1];
        }
        else if(i != 0 && j == 0){
          num[i][j] = num[i - 1][j];
        }
        else if(i != 0 && j != 0){
          num[i][j] = num[i - 1][j] + num[i][j - 1];
        }
      }
    }
    return num[m - 1][n - 1];
  }
