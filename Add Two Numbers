/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(l1 == null || l2 == null)
        {
            return (l1 == null)? l2: l1;
        }
        
        ListNode current = new ListNode(0);
        ListNode previous = current;
        ListNode head = current;
        int addedOn = 0;
        while(l1 != null || l2 != null || addedOn != 0)
        {
         int temp = 0;
         if(l1 != null)
         {
            temp += l1.val;
            l1 = l1.next;
         }
         if(l2 != null)
         {
            temp += l2.val;
            l2 = l2.next;
         }
         temp += addedOn;
         addedOn = temp / 10;
         current.val = temp % 10;
         current.next = new ListNode(0);
         previous = current;
         current = current.next;
        }
        previous.next = null;
        return head;
    }
}
