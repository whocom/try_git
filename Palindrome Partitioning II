  public static int mincut(String s) {
    if(s == null || s.length() == 0)
    {
      return 0;
    }
    int size = s.length();
    Boolean[][] isPalindrome = new Boolean[size][size];
    for(int diff = 0; diff < size; diff++)
    {
      for(int start = 0; start + diff < size; start++)
      {
        if(diff == 0)
        {
          isPalindrome[start][start] = true;
        }
        else if(diff == 1)
        {
          isPalindrome[start][start + diff] = (s.charAt(start) == s.charAt(start + diff));
        }
        else
        {
          isPalindrome[start][start + diff] =
              isPalindrome[start + 1][start + diff - 1] && (s.charAt(start) == s.charAt(start + diff));
        }
      }
    }
    if(isPalindrome[0][size - 1])
    {
      return 0;
    }

    ArrayList<Integer> tailing = new ArrayList<Integer>();

    for(int i = size - 1; i >= 0; i--)
    {
      Integer min = 10000;
      for(int end = i; end < size; end++)
      {
        if(isPalindrome[i][end])
        {
          if(end < size - 1)
          {
            if(min > tailing.get(end - i) + 1)
            {
              min = tailing.get(end - i) + 1;
            }
          }
          else
          {
            if(min > 1)
            {
              min = 1;
            }
          }
        }
      }
      tailing.add(0, min);
    }
    return tailing.get(0) - 1;
  }
