Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

    public ArrayList<ArrayList<Integer>> combine(int n, int k) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(n <= 0 || k <= 0){
            return result;
        }
        if(k >= n){
            k = n;
        }
        ArrayList<Integer> arr = new ArrayList<Integer>();
        helper(n, k, 1, arr, result);
        return result;
    }
    
    private void helper(int n, int k, int index, ArrayList<Integer> arr, ArrayList<ArrayList<Integer>> result){
        if(k == arr.size()){
            result.add(new ArrayList<Integer>(arr));
            return;
        }
        for(int i = index; i <= n; i++){
            arr.add(i);
            helper(n, k, i + 1, arr, result);
            arr.remove(arr.size() - 1);
        }
    }
