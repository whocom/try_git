Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.

//recusive
public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(s3 == null)
        {
            return s1 == null && s2 == null;
        }
        if(s1 == null || s2 == null)
        {
            return (s1 == null)? s3.equals(s2): s3.equals(s1);
        }
        if(s1.length() == 0 || s2.length() == 0)
        {
            return (s1.length() == 0)? s3.equals(s2): s3.equals(s1);
        }
        if(s3.length() != s1.length() + s2.length())
        {
            return false;
        }

        return proc(s1, 0, s2, 0, s3, 0);
    }
    
    private boolean proc(String s1, int i1, String s2, int i2, String s3, int i3)
    {
        if(i3 == s3.length())
        {
            return true;
        }
        

        if(i1 < s1.length() && s1.charAt(i1) == s3.charAt(i3))
        {
            if(proc(s1, i1 + 1, s2, i2, s3, i3 + 1))
            {
                return true;
            }
            else if(i2 < s2.length() && s2.charAt(i2) == s3.charAt(i3))
            {
                return proc(s1, i1, s2, i2 + 1, s3, i3 + 1);
            }
            else
            {
                return false;
            }
        }
        else if(i2 < s2.length() && s2.charAt(i2) == s3.charAt(i3))
        {
                
            return proc(s1, i1, s2, i2 + 1, s3, i3 + 1);
        }
        return false;
    }
}
